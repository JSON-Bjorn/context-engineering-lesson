#!/bin/bash

# Welcome banner
echo ""
echo "╔════════════════════════════════════════════════════════════╗"
echo "║                                                            ║"
echo "║         CONTEXT ENGINEERING INTERACTIVE LESSON             ║"
echo "║                                                            ║"
echo "║  Learn how to optimize LLM context windows for better     ║"
echo "║  accuracy, lower costs, and improved performance          ║"
echo "║                                                            ║"
echo "╚════════════════════════════════════════════════════════════╝"
echo ""
echo "Duration: ~30 minutes"
echo "No API keys required - runs 100% locally!"
echo ""
echo "=================================="
echo ""

# Quick check for virtual environment
if [ ! -d ".venv" ]; then
    echo "⚠️  Virtual environment not found!"
    echo ""
    echo "Please run the setup script first:"
    echo "  bash scripts/setup_venv.sh    # Linux/Mac"
    echo "  scripts\\setup_venv.bat        # Windows"
    echo ""
    exit 1
fi

echo "✅ Virtual environment found"
echo ""

# Create progress directory if needed
mkdir -p progress 2>/dev/null

# Display lesson info
echo ""
echo "=================================="
echo "🎓 READY TO START THE LESSON"
echo "=================================="
echo ""
echo "The virtual environment is ready!"
echo ""
echo "📚 LESSON OVERVIEW"
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo ""
echo "You will learn:"
echo "  1. Token counting and budget management"
echo "  2. Naive context assembly (baseline)"
echo "  3. Primacy strategy (important info first)"
echo "  4. Recency strategy (important info last)"
echo "  5. Sandwich strategy (important info at both ends)"
echo "  6. Advanced optimization techniques"
echo ""
echo "Expected outcomes:"
echo "  • Understand context window limitations"
echo "  • Implement 4 different context strategies"
echo "  • Achieve 15-25% accuracy improvement"
echo "  • Reduce token usage by 20-30%"
echo ""
echo "=================================="
echo "📖 HOW TO START"
echo "=================================="
echo ""
echo "1. Open the notebook in your preferred IDE:"
echo ""
echo "   📁 File: notebooks/context_engineering_lesson.ipynb"
echo ""
echo "2. Select the Python kernel from your virtual environment:"
echo ""
if [ -f ".venv/Scripts/activate" ]; then
    echo "   🐍 Windows: .venv\\Scripts\\python.exe"
else
    echo "   🐍 Linux/Mac: .venv/bin/python"
fi
echo ""
echo "   How to select the kernel:"
echo "   • VS Code: Click the kernel selector in the top-right corner"
echo "   • PyCharm: Go to Settings → Project → Python Interpreter"
echo "   • JupyterLab: Menu → Kernel → Change Kernel"
echo "   • Jupyter Notebook: Kernel → Change kernel"
echo ""
echo "3. Verify you're using the correct environment:"
echo ""
echo "   Run this in the first cell of the notebook:"
echo ""
echo "   ┌─────────────────────────────────────┐"
echo "   │ import sys                          │"
echo "   │ print(sys.executable)               │"
echo "   └─────────────────────────────────────┘"
echo ""
echo "   Expected output should contain '.venv'"
echo ""
echo "4. Work through the lesson cells sequentially"
echo "   (use Shift+Enter to run each cell)"
echo ""
echo "=================================="
echo "✅ AFTER COMPLETING THE LESSON"
echo "=================================="
echo ""
echo "Verify your work with the auto-grader:"
echo "   python src/verify.py"
echo ""
echo "Your progress is saved in:"
echo "   progress/lesson_progress.json"
echo ""
echo "=================================="
echo ""
echo "🚀 Happy learning!"
echo ""
